import java.util.Random;

/**
 * Created by lhscompsci on 10/15/15.
 */
public class Board {

    private int BOARD_SIZE = 10;
    private int NUM_MIRRORS = 10;

    private byte[][] board;

    // directions
    private static final byte UP = -1;
    private static final byte DOWN = 1;
    private static final byte LEFT = -1;
    private static final byte RIGHT = 1;

    // tile ID's
    private static final byte EMPTY = 0; // no mirror
    private static final byte L_MIRROR = 1; // mirror facing left, not revealed
    private static final byte L_MIRROR_R = 2; // mirror facing left, revealed
    private static final byte R_MIRROR = 3; // mirror facing right, not revealed
    private static final byte R_MIRROR_R = 4; // mirror facing right, revealed

    private static final Random random = new Random();

    public Board() {
        initBoard();
    }

    private void initBoard() {
        board = new byte[BOARD_SIZE][BOARD_SIZE];
        int placed_mirrors = 0;
        do {
            int row = random.nextInt(board.length);
            int col = random.nextInt(board[0].length);
            if(board[row][col] == 0) {
                board[row][col] = (random.nextInt(2) == 0 ? L_MIRROR : R_MIRROR);
                placed_mirrors++;
            }
        } while(placed_mirrors < NUM_MIRRORS);
    }

    // converts tileID to char on display
    private static char getTile(byte tileID) throws IndexOutOfBoundsException {
        switch(tileID) {
            case 0:
            case 1:
            case 3:
                return '.';
            case 2:
                return '/';
            case 4:
                return '\\';
            default:
                throw new IndexOutOfBoundsException("Invalid Tile ID");
        }
    }

    // converts x-coordinate of laser on screen to laser on board
    private int laserToX(int x) {
        return x % BOARD_SIZE;
    }

    // converts y-coordinate of laser on screen to laser on board
    private int laserToY(int y) {
        return y % BOARD_SIZE;
    }

    // board coordinates to screen coordinates of laser
    private int getLaser(int row, int col) {

    }

    public int fireLaser(int row, int col, int dirX, int dirY) {
        if(row == -1 || row == BOARD_SIZE || col == -1 || col == BOARD_SIZE) {
            return getLaser(row, col);
        } else if(board[row][col] == EMPTY) {
            return fireLaser(row + dirX, col + dirY, dirX, dirY);
        } else if(board[row][col] == L_MIRROR || board[row][col] == L_MIRROR_R) { // left-facing mirror
            if(dirX == RIGHT || dirX == UP) {
                return fireLaser(row, col, dirX *= -1, dirY);
            } else if(dirY == UP || dirY == DOWN) {
                
            }
        }
    }

    public void displayBoard() {
        System.out.println("   20212223242526272829   "); // todo: no hardcoding
        for(int i = 0; i < board.length; i++) {
            System.out.print((19 - i) + " ");
            for(int j = 0; j < board[0].length; j++) {
                System.out.print(getTile(board[i][j]) + " ");
            }
            System.out.println(30 + i);
        }
        System.out.println("   0 1 2 3 4 5 6 7 8 9   ");
    }
}
