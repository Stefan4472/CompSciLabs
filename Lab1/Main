//package stefankussmaul.lab1;

import com.sun.tools.doclets.internal.toolkit.util.DocFinder;

import java.util.InputMismatchException;
import java.util.Scanner;

/**
 * Simple Algorithms Lab for AP Computer Science.
 * A CLI-based program for executing simple mathematical
 * functions.
 * Written by Stefan Kussmaul, September 2015 (H Block)
 */
public class Main {

    private static final Scanner scanner = new Scanner(System.in);
    private static long startTime;
    private static long endTime;

    public static void main(String[] args) {
        System.out.println("Welcome to Simple Algorithms!\n");
        while(true) {
            printMainMenu();
            handleInput();
            System.out.println();
        }
    }

    // returns console input
    private static String getInput() { return scanner.nextLine(); }

    private static void printMainMenu() {
        System.out.print(
            "1. Factor a Number\n" +
            "2. Calculate GCD\n" +
            "3. Check Prime\n" +
            "4. Calculate Exponent\n" +
            "5. Find Digit in Number\n" +
            "6. Print Digits of Number\n" +
            "7. Count Digits in Number\n" +
            "8. Exit Program\n"
        );
    }

    // parses user input, handles any errors,
    // and starts specified function
    private static void handleInput() {
        try {
            int choice = scanner.nextInt();
            if (choice < 1 || choice > 8) {
                System.out.println("Error: choice must be in range 1 - 8 inclusive\n");
            } else {
                executeFunction(choice);
            }
        } catch (InputMismatchException e) {
            System.out.println("Error: an invalid number was entered\n");
        }
    }

    // takes *handled* menu choice and calls proper algorithm
    private static void executeFunction(int menuChoice) {
        boolean success = false;
        while(!success) {
            switch (menuChoice) {
                case 1:
                    try {
                        System.out.print("Enter a number to be factored: ");
                        int num = scanner.nextInt();
                        startTime = System.currentTimeMillis();
                        MathUtil.printFactors(num);
                        success = true;
                    } catch (InputMismatchException e) {
                        System.out.println("Error: an invalid number was entered");
                    }
                    break;
                case 2:
                    try {
                        System.out.print("Enter a: ");
                        int a = scanner.nextInt();
                        System.out.print("Enter b: ");
                        int b = scanner.nextInt();
                        if (a < 0 || b < 0) {
                            System.out.println("Error: a and b must be positive\n");
                        } else {
                            startTime = System.currentTimeMillis();
                            System.out.println("GCD of " + a + " and " + b + " is " + MathUtil.GCD(a, b));
                            success = true;
                        }
                    } catch (InputMismatchException e) {
                        System.out.println("Error: an invalid number was entered");
                    }
                    break;
                case 3:
                    try {
                        System.out.print("Enter a number to be checked: ");
                        int num = scanner.nextInt();
                        startTime = System.currentTimeMillis();
                        System.out.println(num + " is " + (MathUtil.prime(num) ? "" : "not ") + "prime");
                        success = true;
                    } catch(InputMismatchException e) {
                        System.out.println("Error: invalid number was entered");
                    }
                    break;
                case 4:
                    try {
                        System.out.print("Enter base: ");
                        int base = scanner.nextInt();
                        System.out.print("Enter exponent: ");
                        int exponent = scanner.nextInt();
                        startTime = System.currentTimeMillis();
                        System.out.println(base + "^" + exponent + " = " + MathUtil.power(base, exponent));
                        success = true;
                    } catch(InputMismatchException e) {
                        System.out.println("Error: invalid number was entered");
                    }
                    break;
                case 5:
                    try {
                        System.out.print("Enter number: ");
                        int num = scanner.nextInt();
                        System.out.print("Enter digit to find: ");
                        int digit = scanner.nextInt();
                        startTime = System.currentTimeMillis();
                        System.out.println(digit + "th digit from right is " + MathUtil.findDigit(num, digit));
                        success = true;
                    } catch(InputMismatchException e) {
                        System.out.println("Error: invalid number was entered");
                    }
                    break;
                default:
                    System.out.println("Error: invalid choice");
                    break;
            }
        }
        endTime = System.currentTimeMillis();
        if(success) {
            System.out.println("Ran in " + (endTime - startTime) + "ms\n");
        }
    }
}
